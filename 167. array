167. Two Sum II(sorted)
Input: numbers={2, 7, 11, 15}, target=9
Output: index1=1, index2=2
def twoSum(self,numbers,target):  
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        
#binary search O(nlogn)
  n=len(numbers)
        for i in range(0,n):
            
            L=i+1
            R=n-1
            while L < R:
                M=(L+R)/2
                if numbers[M] < target - numbers[i]: #need to find
                    L=M+1
                else:
                    R=M
                    
            if numbers[L] == target - numbers[i]:
                return (i+1),(L+1)
                
 #two pointer  O(n)               
        n=len(numbers)
        i=0
        j=n-1
            
        while i < j:
            sum = numbers[i]+numbers[j]
            if sum < target:
                i=i+1
            if sum > target:
                j=j-1
            if sum == target:
                return (i+1),(j+1)
